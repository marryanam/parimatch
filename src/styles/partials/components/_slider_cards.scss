@use '../../partials/variables' as *;
@use '../../partials/mixins' as *;
@use 'sass:map';

.slider {
    &-section {
        background: $color-black;
        overflow: hidden;
        padding: 2rem 2rem 2rem 0rem;
    }

    &-wrapper {
        width: 100%;
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        perspective: 1500px;

        @include respond-to('lg') {
            perspective: 1200px;
        }

        @include respond-to('md') {
            perspective: 1000px;
        }

        @include respond-to('sm') {
            perspective: 800px;
        }
    }

    &-container {
        width: 100%;
        max-width: 800px;
        height: 400px;
        position: relative;
        transform-style: preserve-3d;

        @include respond-to('xl') {
            max-width: 700px;
            height: 440px;
        }

        @include respond-to('lg') {
            max-width: 600px;
            height: 380px;
        }

        @include respond-to('md') {
            max-width: 500px;
            height: 320px;
        }

        @include respond-to('sm') {
            max-width: 100%;
            height: 300px;
            margin: 0;
        }
    }
}

.slide {
    position: absolute;
    width: 100%;
    height: 100%;
    transform-origin: center center;
    transition: all 0.7s cubic-bezier(0.645, 0.045, 0.355, 1);
    will-change: transform, opacity;
    transform: rotate(-5deg);
    z-index: 1;
    opacity: 0.8;
    left: 9%;
    top: 25%;

    @include respond-to('md') {
        width: 80%;
        height: 80%;
    }

    @include respond-to('sm') {
        width: 90%;
        height: 90%;
    }

    &-inner {
        position: relative;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.9);
        border: 1px solid rgba(248, 255, 19, 0.1);
        display: flex;
        justify-content: center;
        align-items: center;
        padding: $spacing-md;

        svg {
            width: auto;
            height: auto;
            max-width: 90%;
            max-height: 90%;
            path {
                opacity: 0;
                transform: translateY(30px);
                transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            }
        }
        &.large{
            svg {
                width: 350px;
            }
        }

        @include respond-to('lg') {
            transform: translateZ(40px);
        }

        @include respond-to('md') {
            transform: translateZ(30px);
            padding: $spacing-sm;
        }

        @include respond-to('sm') {
            transform: translateZ(20px);
            padding: $spacing-xs;
        }

        &::before {
            content: '';
            position: absolute;
            inset: -2px;
            border: 2px solid transparent;
            transition: border-color 0.3s;
            pointer-events: none;
            box-shadow: none;
        }

        &::after {
            display: none;
        }
    }

    // Активний слайд
    &.active {
        transform: rotate(-15deg);
        z-index: 3;
        opacity: 1;
        left: 0;
        top: 15%;
    }

    // Наступний слайд
    &.next {
        transform: rotate(-10deg);
        z-index: 2;
        opacity: 0.9;
        left: 0;
        top: 20%;
    }

    // Попередній слайд
    &.prev {
        transform: rotate(-5deg);
        z-index: 1;
        opacity: 0.8;
        left: 0;
        top: 25%;
    }

    &:not(.active):not(.next):not(.prev) {
        transform: rotate(0deg);
        z-index: 0;
        opacity: 0.7;
        left: 6%;
        top: 30%;
    }
}

@keyframes glow {
    from {
        text-shadow: 0 0 10px map.get($color-yellow-glow, light),
                     0 0 20px map.get($color-yellow-glow, medium),
                     0 0 30px map.get($color-yellow-glow, soft);
    }
    to {
        text-shadow: 0 0 20px map.get($color-yellow-glow, light),
                     0 0 30px map.get($color-yellow-glow, medium),
                     0 0 40px map.get($color-yellow-glow, soft),
                     0 0 50px map.get($color-yellow-glow, trace);
    }
}

@keyframes borderDraw {
    0% {
        border-color: transparent;
        border-right-color: map.get($color-yellow-glow, light);
    }
    25% {
        border-top-color: map.get($color-yellow-glow, light);
    }
    50% {
        border-left-color: map.get($color-yellow-glow, light);
    }
    75% {
        border-bottom-color: map.get($color-yellow-glow, light);
    }
    100% {
        border-color: map.get($color-yellow-glow, light);
    }
}

@keyframes textWave {
    0% {
        opacity: 0;
        transform: translateY(50px) rotate(5deg);
        filter: blur(10px);
    }
    60% {
        opacity: 0.8;
        filter: blur(5px);
    }
    100% {
        opacity: 1;
        transform: translateY(0) rotate(0);
        filter: blur(0);
    }
}

// Touch device optimizations
@media (hover: none) and (pointer: coarse) {
    .slider {
        &-wrapper {
            perspective: 800px;
        }

        &-container {
            touch-action: none;
        }
    }

    .slide {
        &-inner {
            transform: translateZ(20px);
            
            &::before {
                transform: translateZ(-10px);
            }
        }

        &-wr {
            font-size: clamp(1.5rem, 4vw, 3rem);
            width: 100%;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;

            .line {
                display: flex;
                justify-content: center;
                align-items: center;
                width: 100%;
                margin-bottom: 0.2em;
                line-height: 1.2;

                &:last-child {
                    margin-bottom: 0;
                }
            }

            .word {
                display: flex;
                margin-right: 0.3em;
                white-space: nowrap;

                &:last-child {
                    margin-right: 0;
                }
            }

            .space {
                display: inline-block;
                opacity: 1;
                width: 0.3em;
            }

            .char {
                display: inline-block;
                opacity: 0;
                transform: translateY(30px);
                transition: opacity 0.5s ease-out, transform 0.5s ease-out;
                will-change: opacity, transform;
                
                &.animate {
                    opacity: 1;
                    transform: translateY(0);
                }
            }
        }
    }
} 

@keyframes rotate {
	100% {
		transform: translate(-50%, -50%) rotate(1turn);
	}
}